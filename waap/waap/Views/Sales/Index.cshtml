@using wapp.Models
@using static wapp.waapConstants
@model IEnumerable<wapp.Models.Sale>

@{
    ViewData["Title"] = "Index";


    bool isAdmin = User.IsInRole(ROLES.ADMIN);
    bool isSales = User.IsInRole(ROLES.SALESMAN);
    bool isLogistics = User.IsInRole(ROLES.LOGISTICS);
}

<h1>List of Orders</h1>

<p>
    <a asp-controller="Encomendar" class="btn btn-primary" >Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Identifier)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Client.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Observations)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinalValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPaid)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var sale in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => sale.Identifier)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.Time)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.Client.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.Observations)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.FinalValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => sale.IsPaid)
                </td>
                <td>
                    <div class="d-inline-flex gap-2">
                    @{
                        if ((isLogistics || isAdmin))
                        {
                            if (sale.State == SaleState.Ordered)                            
                            {
                                <a asp-controller="Processar" asp-action="StartProcessing" class="btn btn-success" asp-route-id="@sale.Id">Process</a>
                            }


                            if (sale.State == SaleState.Processing)
                            {
                                <a asp-controller="Processar" asp-action="StartProcessing" class="btn btn-primary btn-picking" asp-route-id="@sale.Id">Picking</a>
                            }
                            
                        }                        
                    }

                        <a asp-controller="Sales" asp-action="Edit" asp-route-id="@sale.Id" class="btn btn-primary btn-edit">Edit</a>
                            <a asp-action="Details" class="btn btn-primary" asp-route-id="@sale.Id">Details</a>
                    

                    @{
                        if (isAdmin)
                        {
                            <a asp-action="Delete" class="btn btn-danger" asp-route-id="@sale.Id">Delete</a>
                        }
                    }
                    </div>
                    
            </td>
        </tr>
}
    </tbody>
</table>
